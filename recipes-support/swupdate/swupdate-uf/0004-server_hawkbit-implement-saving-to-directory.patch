From 76e2ae960a487f9b1690dbbcd708704b13221f49 Mon Sep 17 00:00:00 2001
From: Diego Rondini <diego.rondini@kynetics.com>
Date: Thu, 1 Jun 2017 16:32:24 +0200
Subject: [PATCH 4/4] server_hawkbit: implement saving to directory

Implement saving update artifact files to a directory specified as a
parameter.
---
 suricatta/server_hawkbit.c | 48 +++++++++++++++++++++++++++++++++-------------
 1 file changed, 35 insertions(+), 13 deletions(-)

diff --git a/suricatta/server_hawkbit.c b/suricatta/server_hawkbit.c
index 6c967b4..5377eed 100644
--- a/suricatta/server_hawkbit.c
+++ b/suricatta/server_hawkbit.c
@@ -926,6 +926,17 @@ server_op_res_t server_process_update_artifact(int action_id,
 		server_hawkbit.errors[i] = NULL;
 	server_hawkbit.errorcnt = 0;
 
+	// Open storage directory
+	int update_artifacts_storage_fd;
+	DEBUG("Parameter update_artifacts_storage_path is %s.\n", server_hawkbit.update_artifacts_storage_path);
+	if (server_hawkbit.update_artifacts_storage_path != NULL) {
+		update_artifacts_storage_fd = open(server_hawkbit.update_artifacts_storage_path, O_PATH | O_DIRECTORY);
+		if (update_artifacts_storage_fd < 0) {
+			ERROR("Open of artifacts storage directory %s failed: %s\n", server_hawkbit.update_artifacts_storage_path, strerror(errno));
+			return SERVER_EERR;
+		}
+	}
+
 	struct array_list *json_data_artifact_array =
 	    json_object_get_array(json_data_artifact);
 	int json_data_artifact_max =
@@ -1048,15 +1059,11 @@ server_op_res_t server_process_update_artifact(int action_id,
 		server_get_current_time(&server_time);
 
 		int update_artifact_file_fd = FD_USE_IPC;
-		(*artifact_count)++;
-		if ((*artifact_count) >= 1000) {
-			ERROR("Too many artifacts, cannot save them all.\n");
-		} else {
-			// Create file path
-			const char *update_artifacts_storage_path = "/tmp";
-			int update_artifacts_storage_fd = open(update_artifacts_storage_path, O_PATH | O_DIRECTORY);
-			if (update_artifacts_storage_fd < 0) {
-				ERROR("Open of artifacts storage directory failed.\n");
+		if (server_hawkbit.update_artifacts_storage_path != NULL) {
+			(*artifact_count)++;
+			if ((*artifact_count) >= 1000) {
+				ERROR("Too many artifacts, cannot save them all.\n");
+				goto cleanup_loop;
 			} else {
 				const char *artifact_filename = json_object_get_string(json_data_artifact_filename);
 				size_t artifact_saved_filename_size = 3 + 1 + strlen(artifact_filename) + 1;
@@ -1134,6 +1141,13 @@ cleanup:
 		server_hawkbit_error("No suitable .swu image found");
 		result = SERVER_EERR;
 	}
+	// Close storage directory
+	if (server_hawkbit.update_artifacts_storage_path != NULL) {
+		int close_ret = close(update_artifacts_storage_fd);
+		if (close_ret < 0) {
+			ERROR("Close of artifacts storage directory %s failed: %s\n", server_hawkbit.update_artifacts_storage_path, strerror(errno));
+		}
+	}
 
 	return result;
 }
@@ -1208,10 +1222,18 @@ server_op_res_t server_install_update(void)
 	int json_data_chunk_count = 0;
 	int json_data_chunk_max = json_object_array_length(json_data_chunk);
 	json_object *json_data_chunk_item = NULL;
-	const char *details[] = {"Installing Update Chunk Artifacts.",
-				 "Installing Update Chunk Artifacts failed.",
-				 "Installed Chunk.",
-				 "All Chunks Installed."};
+	const char *details[4];
+	if (server_hawkbit.update_artifacts_storage_path != NULL) {
+		details[0] = "Downloading Update Chunk Artifacts.";
+		details[1] = "Download of Update Chunk Artifacts failed.";
+		details[2] = "Downloaded Chunk.";
+		details[3] = "All Chunks Downloaded.";
+	} else {
+		details[0] = "Installing Update Chunk Artifacts.";
+		details[1] = "Installing Update Chunk Artifacts failed.";
+		details[2] = "Installed Chunk.";
+		details[3] = "All Chunks Installed.";
+	}
 
 	for (json_data_chunk_count = 0;
 	     json_data_chunk_count < json_data_chunk_max;
-- 
2.9.4

